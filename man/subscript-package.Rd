% Generated by roxygen2 (4.0.0): do not edit by hand
\docType{package}
\name{subscript-package}
\alias{subscript-package}
\title{Consistent subscripting}
\description{
Consistent subscripting
}
\examples{
library(subscript)
library(ape)
set.seed(1)

n <- 8 # number of sites
m <- 5 # number of species

env <- data.frame(x = rnorm(n))
coord <- data.frame(lat = rnorm(n), long = rnorm(n))
rownames(env) <- rownames(coord) <- letters[1:n]

traits <- data.frame(z1 = rnorm(m), z2 = rnorm(m))
rownames(traits) <- LETTERS[1:m]
newick <- "((A,(B,E)),(D,C));"
tree <- chronos(compute.brlen(read.tree(text = newick)))

slist <- speciesList(replicate(n, LETTERS[sample.int(m, sample.int(m, 1))]), letters[1:n])
slist <- speciesList(slist)

pdf <- poly.data.frame(env    = setDimIds(env,         "sites"),
                       coord  = setDimIds(coord,       "sites"),
                       geog   = setDimIds(longDist(coord), "sites"),
                       traits = setDimIds(traits,      "species"),
                       coph   = setDimIds(longDist(tree), "species"),
                       tree   = setDimIds(tree,        "species"),
                       slist  = setDimIds(slist,       c("sites", "species")))

summary(pdf)

dimIdsNested(pdf)
dimIdsConcat(pdf)
dimIdsUnique(pdf)

dNamesNested(pdf)
dNamesConcat(pdf)
dNames(pdf)

ss1 <- ss(pdf, list(species = c("D","C","A"), sites = c("a","e","f")))
ss2 <- ss(pdf, list(sites = c("a","e","f"), species = c("D","C","A")))
ss3 <- ss(pdf, list(c("a","e","f"), c("D","C","A")))
try(ss4 <- ss(pdf, list(c("D","C","A"), c("a","e","f")))) # should be error
ss5 <- ss(pdf, list(species = c("D","C","A")))

nDims(pdf)
nDims(traits) # data frames (perhaps confusingly) have one dimension
nDims(tree)

longDist(tree)
longDist(traits)
reOrder(longDist(tree), dNames(traits)[[1]])

(FPDist <- combineDists(tree, traits, 0.5))
meanPairwiseDist(pdf$slist, setDimIds(FPDist, "species"))

l <- list(env    = env,
          coord  = coord,
          geog   = dist(coord),
          traits = traits,
          coph   = as.dist(cophenetic(tree)),
          tree   = tree,
          comm   = slist)
pdf2 <- as.poly.data.frame(l, 2, verb = TRUE)
summary(pdf2)
dNames(pdf2)
regs <- dbDiversityRegression(slist,                         # species list
                              as.dist(cophenetic(pdf$tree)), # phylogenetic distances
                              dist(pdf$traits),              # functional distances
                              setNames(env$x, rownames(env)) # ecosystem function
                              )

mean(regs)
coef(regs)
aHpd(regs)
}

